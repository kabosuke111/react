{"version":3,"sources":["images/rogo.svg","images/top/sample01.jpg","images/top/sample02.jpg","images/top/sample03.jpg","Component/Header.jsx","Component/Footer.jsx","Component/MainContents/01_TopSection/TopSectionAnimation.jsx","Component/MainContents/01_TopSection/TopSectionText.jsx","Component/MainContents/01_TopSection/TopSection.jsx","Component/MainContents/01_TopSection/ImageComponent.tsx","Component/MainContents/01_TopSection/MiddleSection.tsx","Component/Main.tsx","App.tsx","serviceWorker.ts","actions.ts","reducer.ts","store.ts","index.tsx"],"names":["module","exports","Header","useState","bools","A_top","A_bord","A_rotate","A_width","A_opacity","RS_delay_first","A_Big","anims","animsAct","menu_bar","menu_link","trail_anim","useTrail","length","config","gentle","transform","opacity","delay","spring_anim","useSpring","width","icon_spring","id","className","h1","style","onClick","img","src","TopIcon","alt","ul","map","value","index","li","listStyle","href","Footer","TopSectionAnimation","A_col","A_row","A_half","A_opac","tops","topAct","height","left","trail_anim_col","window","addEventListener","div","name","top","TopSectionText","class","TopSection","ImageComponent","props","image_sources","first","image01","second","image02","third","image03","source_url","key","push","MiddleSection","offset_Y","Main","App","scroll_point","connect","appState","state","Boolean","location","hostname","match","Actions","update_offset_Y","actionCreatorFactory","actionCreator","Reducer","reducerWithInitialState","case","storeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","applyMiddleware","thunk","ReactDOM","render","Store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7fe7d325.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rogo.187aaff7.svg\";","module.exports = __webpack_public_path__ + \"static/media/sample01.facedc1c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sample02.46b1ef34.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sample03.33553174.jpg\";","import React, { useState } from \"react\";\nimport { useSpring, useTrail, animated, config } from \"react-spring\";\nimport TopIcon from '../images/rogo.svg';\nimport '../css/App.css';\nimport AnchorLink from 'react-anchor-link-smooth-scroll'\n\nconst Header = () => {\n    //Hooksでステートをセット\n    const [anims, animsAct] = useState({\n      bools: false,\n      A_top: 100,\n      A_bord: 0,\n      A_rotate: 180,\n      A_width: 0,\n      A_opacity: 0,\n      RS_delay_first: 200,\n      A_Big: 1,\n    });\n\n    //メニューバーの内容\n    const menu_bar = [\n      'ホーム',\n      '新入社員の方へ',\n      '会社情報',\n      '社内活動',\n      'マニュアル',\n      '社内報',\n      'アクセス',\n      'リンク'\n    ]\n\n    //メニューバーのリンク\n    const menu_link = [\n      'wrapper',\n      '',\n      '',\n      '',\n      '',\n      '',\n      '',\n      'footer',\n\n    ]\n    //トレールアニメーションのスタイル\n    const trail_anim = useTrail(menu_bar.length, {\n      config: config.gentle,\n      transform: `translateY(${anims.A_top}%) rotateX(${anims.A_rotate}deg)`,\n      opacity: anims.A_opacity,\n      delay: anims.RS_delay_first,\n    });\n  \n    //スプリングアニメーションのセット\n    const spring_anim = useSpring({\n      width: `${anims.A_width}%`\n    });\n  \n    const icon_spring = useSpring({\n      config: config.gentle,\n      transform: `scale(${anims.A_Big}, ${anims.A_Big}) rotate(${anims.A_rotate*2}deg)`,\n    });\n  \n    //リターン\n    return (\n      //map関数により順番に要素をセット\n      <header id=\"header\" className=\"l-header\">\n        <animated.h1 className=\"top_icon\" style={icon_spring} onClick={()=>animsAct(\n          !anims.bools ? {...anims, A_top:0, A_rotate:0, A_width:100, A_Big: 1.2, A_opacity: 1, bools: !anims.bools} : {\n          ...anims, A_top:100, A_rotate: 180, A_width: 0, A_Big: 1, A_opacity: 0, bools: !anims.bools})}>\n          <animated.img src={TopIcon} alt=\"breeze group\" />\n        </animated.h1>\n\n        <nav>\n          <animated.ul className=\"bord_container\" style={spring_anim}>\n            {trail_anim.map((value, index) => (\n              <animated.li className=\"bord_item\" style={{...value, listStyle: \"none\"}} >\n                <AnchorLink href={`#${menu_link[index]}`}>{menu_bar[index]}</AnchorLink>\n              </animated.li>)\n            )}\n          </animated.ul>\n          \n        </nav>\n      </header>\n    );\n  }\n  \n\nexport default Header;","import React from 'react';\n\nconst Footer = () => {\n\n    return (\n        <footer id=\"footer\" className=\"l-footer\">\n            <address>1921&copy;</address>\n        </footer>\n    );\n}\n\nexport default Footer;","import React, { useState, useRef } from \"react\";\nimport { useSpring, useTrail, animated, config } from \"react-spring\";\nimport '../../../css/App.css';\n\nconst TopSectionAnimation = () => {\n    let bools = true;\n    //Hooksでステートをセット\n    const [tops, topAct] = useState({\n        A_col: 0,\n        A_row: 0,\n        A_half: 0,\n        RS_delay_first: 0,\n        A_opac: 0,\n      });\n\n    //トレールアニメーションのスタイル\n    const trail_anim = useTrail(4, {\n        width: `${tops.A_row}%`,\n        height: `${tops.A_col}%`,\n        left: `calc(50% + ${tops.A_half}px)`,\n        opacity: tops.A_opac,\n        delay: tops.RS_delay_first,\n    });\n\n    const trail_anim_col = useTrail(15, {\n        width: `${tops.A_row}%`,\n        height: `${tops.A_col}%`,\n        left: `calc(50% + ${tops.A_half}px)`,\n        opacity: tops.A_opac,\n        delay: tops.RS_delay_first,\n    });\n    \n    window.addEventListener('load', () => {\n        topAct({\n            ...tops,\n            A_opac: .2,\n            A_col: 100, \n            A_row: 100,\n            });\n        });\n        \n    const classnameAction = (name) => {\n        name = bools ? \"page_top-line row first\" : \"page_top-line row\";\n        bools = false;\n        return name;\n    };\n\n    return (\n        <div className=\"page_top-linebox\" id=\"linebox\">\n            {trail_anim_col.map((value, index)=>(\n                <animated.div className=\"page_top-line col\" style={{...value, width: 0,  left: `calc(50% + ${tops.A_half + (index * 34)}px)`}}>\n                    \n                </animated.div>\n            ))}\n            {trail_anim_col.map((value, index)=>(\n                <animated.div className=\"page_top-line col\" style={{...value, width: 0,  left: `calc(50% + ${tops.A_half + (index * -34)}px)`}}>\n                    \n                </animated.div>\n            ))}\n            {trail_anim.map((value, index)=>(\n                <animated.div className={classnameAction()} style={{...value, height: 0,  top: `calc(50% + ${tops.A_half + (index * 34)}px)`}}>\n                    \n                </animated.div>\n            ))}\n            {trail_anim.map((value, index)=>(\n                <animated.div className=\"page_top-line row\" style={{...value, height: 0,  top: `calc(50% + ${tops.A_half + (index * -34)}px)`}}>\n                    \n                </animated.div>\n            ))}\n        </div>\n    );\n}\n\nexport default TopSectionAnimation;","import React from 'react';\nimport { useSpring, useTrail, animated, config } from \"react-spring\";\nimport '../../../css/App.css';\n\nconst TopSectionText = () => {\n    return (\n        <div class=\"page_top-text_box center\">\n            <p class=\"page_top-text_item is-fs65\"><span class=\"bold\">楽しい</span>を作ろう</p>\n            <p class=\"page_top-text_item\">ライフワーク、自社プロダクト、発信するコンテンツ...<br />\n            会社全体で一丸となり、<br />\n            社員・顧客に「楽しい」と感じてもらえる様取り組んでいきます。</p>\n        </div>\n    );\n}\n\nexport default TopSectionText;","import React, { useState, useRef } from \"react\";\nimport TopSectionAnimation from './TopSectionAnimation';\nimport TopSectionText from './TopSectionText';\nimport '../../../css/App.css';\n\nconst TopSection = () => {\n\n    return (\n        <section className=\"l-section page_top\">\n            \n            <h2 className=\"page_top-section_title\">BREEZE GROUP</h2>\n            <TopSectionText />\n            <TopSectionAnimation />\n        </section>\n    );\n}\n\nexport default TopSection;","import React, {useState} from 'react';\nimport '../../../css/App.css';\nimport image01 from '../../../images/top/sample01.jpg';\nimport image02 from '../../../images/top/sample02.jpg';\nimport image03 from '../../../images/top/sample03.jpg';\nimport {useSpring, useTrail, animated, config} from 'react-spring';\n\ninterface Props {\n    offset_Y: number;\n}\n\nconst ImageComponent: React.FC<Props> = (props) => {\n\n\n    const image_sources: any = {\n        first: image01,\n        second: image02,\n        third: image03,\n    }\n\n    let source_url = [];\n\n    for(let key in image_sources) {\n        source_url.push(image_sources[key]);\n    }\n\n    return (\n      <div className=\"l-middle_images\">\n            {source_url.map((value) => (<div className=\"middle_images-item_box\">\n              <img src={value} alt=\"\" className=\"middle_images-item\" />\n            </div>))}\n      </div>\n    );\n}\n\nexport default ImageComponent;","import React from 'react';\nimport '../../../css/App.css';\nimport ImageComponent from './ImageComponent';\n\ninterface Props {\n    offset_Y: number;\n}\n\n\nconst MiddleSection: React.FC<Props> = (props) => {\n    return (\n        <section className=\"l-section page_top-middle\">\n            <ImageComponent offset_Y={props.offset_Y}/>\n        </section>\n    );\n}\nexport default MiddleSection;","import React, {useState} from 'react';\nimport TopSection from './MainContents/01_TopSection/TopSection';\nimport MiddleSection from './MainContents/01_TopSection/MiddleSection';\nimport '../css/App.css';\n\ninterface Props {\n    offset_Y: number;\n}\n\nconst Main: React.FC<Props> = (props) => {\n    return (\n        <main className=\"main\">\n            <TopSection />\n            <MiddleSection offset_Y={props.offset_Y} />\n        </main>\n    )\n}\n\nexport default Main;","import React, {useState} from \"react\";\nimport {connect} from 'react-redux';\nimport Header from './Component/Header';\nimport Footer from './Component/Footer';\nimport Main from './Component/Main';\nimport './css/App.css';\nimport {AppState} from './store';\n\ninterface Types {\n    offset_Y: number;\n}\n\nconst scroll_point: Types = {\n    offset_Y: 0,\n}\n\nconst mapping = (appState: AppState) => {\n    return {\n        offset_Y: appState.state.offset_Y,\n    };\n}\n\nconst App: React.FC = () => {\n    const [scroll_point, scrollAct] = useState<Types>({\n        offset_Y: 0,\n    });\n\n    //addEventListenerを入れたいが重くなってしまう\n    // window.addEventListener('scroll', (e):void => {\n    //     let sp:number = document.documentElement.scrollTop;\n    //     scrollAct({\n    //         offset_Y: sp,\n    //     });\n    // }, {passive: true});\n\n    //リターン\n    return (\n        //map関数により順番に要素をセット\n    <div id=\"wrapper\">\n        <Header />\n        <Main offset_Y={scroll_point.offset_Y} />\n        <div style={{height: 1000+\"px\"}}></div>\n        <Footer />\n    </div>    \n    );\n  }\n  \n  connect(mapping)(App);\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { actionCreatorFactory } from '../node_modules/typescript-fsa';\n\nconst actionCreator = actionCreatorFactory()\n\nexport const Actions = {\n    update_offset_Y: actionCreator<number>('CHANGE_OFFSET_Y'),\n}","import { reducerWithInitialState } from 'typescript-fsa-reducers'\nimport { Actions } from './actions';\n\nexport interface State {\n//ここにstoreが持つstateを書く\n    offset_Y: number;\n}\n\nexport const initialState: State = {\n//ここにstateの初期値を書く\n    offset_Y: 0,\n}\n\nexport const Reducer = reducerWithInitialState(initialState)\n.case(Actions.update_offset_Y, (state, offset_Y) => {\n    return { ...state, offset_Y: state.offset_Y}\n})","import {combineReducers,applyMiddleware,compose,createStore} from 'redux';\nimport { actionCreatorFactory } from '../node_modules/typescript-fsa';\nimport {Reducer, State} from './reducer';\nimport thunk from \"redux-thunk\";\n\nexport type AppState = {\n    state: State;\n}\n\nconst storeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    combineReducers<AppState>({\n      state: Reducer\n    }),\n    storeEnhancers(applyMiddleware(thunk))\n)\n\nexport default store;","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Store from './store';\n\nReactDOM.render(\n    <Provider store={Store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}